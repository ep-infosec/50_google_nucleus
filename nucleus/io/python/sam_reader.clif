# Copyright 2018 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from "nucleus/protos/range_pyclif.h" import *
from "nucleus/protos/reads_pyclif.h" import *
from "nucleus/protos/reference_pyclif.h" import *
from "nucleus/util/proto_clif_converter.h" import *
from "nucleus/vendor/statusor_clif_converters.h" import *

from nucleus.io.clif_postproc import WrappedSamIterable


from "nucleus/io/sam_reader.h":
  namespace `nucleus`:

    class SamIterable:
      def PythonNext(self, read: EmptyProtoPtr<Read>) -> StatusOr<bool>
      def Release(self) -> Status
      @__enter__
      def PythonEnter(self) -> Status
      @__exit__
      def PythonExit(self) -> Status

    class SamReader:
      @classmethod
      def `FromFile` as from_file(
          cls, reads_path: str, ref_path: str, options: SamReaderOptions)
        -> StatusOr<SamReader>

      def `Iterate` as iterate(self) -> StatusOr<SamIterable>:
        return WrappedSamIterable(...)
      def `Query` as query(self, region: Range) -> StatusOr<SamIterable>:
        return WrappedSamIterable(...)
      header: SamHeader = property(`Header`)
      @__enter__
      def PythonEnter(self) -> Status
      @__exit__
      def Close(self) -> Status
